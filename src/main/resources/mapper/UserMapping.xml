<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.learn.sportplan.dao.UserDao">
    <!--  使用getUserByMessage语句 接收username password参数 返回UserBean  -->
    <select id="getUserByMessage" resultType="com.learn.sportplan.bean.User">
        SELECT * FROM `easyuser` WHERE
        username=#{username} AND password=#{password} AND state = 1
    </select>
    <select id="getAllUser" resultType="com.learn.sportplan.bean.User">
        SELECT * FROM `easyuser`
        <!--    动态SQL 非必须    -->
        <if test="username != null">
            WHERE username like #{username}
        </if>
        LIMIT #{pageStart}, #{pageSize}
    </select>
    <select id="getUserCounts" resultType="java.lang.Integer">
        SELECT count(*) FROM `easyuser`
        <if test="username != null">
            WHERE username like #{username}
        </if>
    </select>
    <select id="getUpdateUser" resultType="com.learn.sportplan.bean.User">
        SELECT * FROM `easyuser` WHERE id=#{id}
    </select>
    <update id="updateState">
        UPDATE `easyuser` SET state = #{state} WHERE id = #{id}
    </update>
    <insert id="addUser">
        INSERT INTO `easyuser`
        (username, password, email, role, state)
        VALUE
        (#{username}, #{password}, #{email}, #{role}, #{state})
    </insert>
    <update id="updateUser">
        UPDATE `easyuser` SET username=#{username}, password=#{password}, email=#{email} WHERE id=#{id}
    </update>
    <update id="updateRole">
        UPDATE `easyuser` SET role=#{role} WHERE id=#{id}
    </update>
    <delete id="deleteUser">
        DELETE FROM `easyuser` WHERE id=#{id}
    </delete>
</mapper>